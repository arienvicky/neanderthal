//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.24 at 10:20:12 PM EST 
//


package org.acord.standards.pc_surety.acord1.xml;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for SPFieldEditDefinition_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SPFieldEditDefinition_Type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}ContextPath"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}FieldAssertionExpr" minOccurs="0"/>
 *         &lt;group ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}CODELISTNAMEENTITY" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}DataMask" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}PromptText" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}HelpText" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}ErrorText" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}PromptForInd" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}FieldUsageCd"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}ConditionalFieldEditDefinition" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}Pattern" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" use="required" type="{http://www.ACORD.org/standards/PC_Surety/ACORD1/xml/}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SPFieldEditDefinition_Type", propOrder = {
    "contextPath",
    "fieldAssertionExpr",
    "codeListNameCd",
    "spCodeListName",
    "dataMask",
    "promptText",
    "helpText",
    "errorText",
    "promptForInd",
    "fieldUsageCd",
    "conditionalFieldEditDefinition",
    "pattern"
})
public class SPFieldEditDefinitionType {

    @XmlElement(name = "ContextPath", required = true)
    protected CInfinite contextPath;
    @XmlElement(name = "FieldAssertionExpr")
    protected CInfinite fieldAssertionExpr;
    @XmlElement(name = "CodeListNameCd")
    protected CodeLists codeListNameCd;
    @XmlElement(name = "SPCodeListName")
    protected C255 spCodeListName;
    @XmlElement(name = "DataMask")
    protected C255 dataMask;
    @XmlElement(name = "PromptText")
    protected List<PromptText> promptText;
    @XmlElement(name = "HelpText")
    protected List<HelpText> helpText;
    @XmlElement(name = "ErrorText")
    protected List<ErrorText> errorText;
    @XmlElement(name = "PromptForInd")
    protected Boolean promptForInd;
    @XmlElement(name = "FieldUsageCd", required = true)
    protected FieldUsage fieldUsageCd;
    @XmlElement(name = "ConditionalFieldEditDefinition")
    protected List<ConditionalFieldEditDefinitionType> conditionalFieldEditDefinition;
    @XmlElement(name = "Pattern")
    protected CInfinite pattern;
    @XmlAttribute(name = "id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected String id;

    /**
     * Gets the value of the contextPath property.
     * 
     * @return
     *     possible object is
     *     {@link CInfinite }
     *     
     */
    public CInfinite getContextPath() {
        return contextPath;
    }

    /**
     * Sets the value of the contextPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link CInfinite }
     *     
     */
    public void setContextPath(CInfinite value) {
        this.contextPath = value;
    }

    /**
     * Gets the value of the fieldAssertionExpr property.
     * 
     * @return
     *     possible object is
     *     {@link CInfinite }
     *     
     */
    public CInfinite getFieldAssertionExpr() {
        return fieldAssertionExpr;
    }

    /**
     * Sets the value of the fieldAssertionExpr property.
     * 
     * @param value
     *     allowed object is
     *     {@link CInfinite }
     *     
     */
    public void setFieldAssertionExpr(CInfinite value) {
        this.fieldAssertionExpr = value;
    }

    /**
     * Gets the value of the codeListNameCd property.
     * 
     * @return
     *     possible object is
     *     {@link CodeLists }
     *     
     */
    public CodeLists getCodeListNameCd() {
        return codeListNameCd;
    }

    /**
     * Sets the value of the codeListNameCd property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeLists }
     *     
     */
    public void setCodeListNameCd(CodeLists value) {
        this.codeListNameCd = value;
    }

    /**
     * Gets the value of the spCodeListName property.
     * 
     * @return
     *     possible object is
     *     {@link C255 }
     *     
     */
    public C255 getSPCodeListName() {
        return spCodeListName;
    }

    /**
     * Sets the value of the spCodeListName property.
     * 
     * @param value
     *     allowed object is
     *     {@link C255 }
     *     
     */
    public void setSPCodeListName(C255 value) {
        this.spCodeListName = value;
    }

    /**
     * Gets the value of the dataMask property.
     * 
     * @return
     *     possible object is
     *     {@link C255 }
     *     
     */
    public C255 getDataMask() {
        return dataMask;
    }

    /**
     * Sets the value of the dataMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link C255 }
     *     
     */
    public void setDataMask(C255 value) {
        this.dataMask = value;
    }

    /**
     * Gets the value of the promptText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the promptText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPromptText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PromptText }
     * 
     * 
     */
    public List<PromptText> getPromptText() {
        if (promptText == null) {
            promptText = new ArrayList<PromptText>();
        }
        return this.promptText;
    }

    /**
     * Gets the value of the helpText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the helpText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHelpText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HelpText }
     * 
     * 
     */
    public List<HelpText> getHelpText() {
        if (helpText == null) {
            helpText = new ArrayList<HelpText>();
        }
        return this.helpText;
    }

    /**
     * Gets the value of the errorText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the errorText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getErrorText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ErrorText }
     * 
     * 
     */
    public List<ErrorText> getErrorText() {
        if (errorText == null) {
            errorText = new ArrayList<ErrorText>();
        }
        return this.errorText;
    }

    /**
     * Gets the value of the promptForInd property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getPromptForInd() {
        return promptForInd;
    }

    /**
     * Sets the value of the promptForInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPromptForInd(Boolean value) {
        this.promptForInd = value;
    }

    /**
     * Gets the value of the fieldUsageCd property.
     * 
     * @return
     *     possible object is
     *     {@link FieldUsage }
     *     
     */
    public FieldUsage getFieldUsageCd() {
        return fieldUsageCd;
    }

    /**
     * Sets the value of the fieldUsageCd property.
     * 
     * @param value
     *     allowed object is
     *     {@link FieldUsage }
     *     
     */
    public void setFieldUsageCd(FieldUsage value) {
        this.fieldUsageCd = value;
    }

    /**
     * Gets the value of the conditionalFieldEditDefinition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conditionalFieldEditDefinition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConditionalFieldEditDefinition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConditionalFieldEditDefinitionType }
     * 
     * 
     */
    public List<ConditionalFieldEditDefinitionType> getConditionalFieldEditDefinition() {
        if (conditionalFieldEditDefinition == null) {
            conditionalFieldEditDefinition = new ArrayList<ConditionalFieldEditDefinitionType>();
        }
        return this.conditionalFieldEditDefinition;
    }

    /**
     * Gets the value of the pattern property.
     * 
     * @return
     *     possible object is
     *     {@link CInfinite }
     *     
     */
    public CInfinite getPattern() {
        return pattern;
    }

    /**
     * Sets the value of the pattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link CInfinite }
     *     
     */
    public void setPattern(CInfinite value) {
        this.pattern = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

}
